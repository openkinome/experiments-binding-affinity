name: CI

on:
  push:
    branches:
      - "master"
      - "main"
  pull_request:
    branches:
      - "master"
      - "main"
  schedule:
    # Run a cron job once daily
    - cron: "0 0 * * *"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux, Python 3.7
            os: ubuntu-latest
            python-version: "3.7"
            conda-installer: https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh

          - name: Linux, Python 3.9
            os: ubuntu-latest
            python-version: "3.9"
            conda-installer: https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh

          - name: MacOS, Python 3.7
            os: macOS-latest
            python-version: "3.7"
            conda-installer: https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-MacOSX-x86_64.sh

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: ${{ matrix.conda-installer }}
          python-version: ${{ matrix.python-version }}
          activate-environment: experiments-binding-affinity
          channel-priority: true
          auto-activate-base: false
          use-mamba: true

      - name: Update environment from url
        shell: bash
        run:
          mamba env update -n experiments-binding-affinity -f https://raw.githubusercontent.com/openkinome/kinoml/unite_yamls/devtools/conda-envs/test_env.yaml

      - name: Install KinoML
        shell: bash -l {0}
        run:
          python -m pip install https://github.com/openkinome/kinoml/archive/master.tar.gz

      - name: Additional info about the build
        shell: bash -l {0}
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info --all
          conda list

      - name: Run examples
        shell: bash -l {0}
        run: |
          bash tests/test_examples.sh
